% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dv_to_csv.R
\name{dv_to_csv}
\alias{dv_to_csv}
\title{Converts a Datavyu (.opf) file to CSV.}
\usage{
dv_to_csv(dv_dir = ".", dv_fn = "db", out_fn = paste0(dv_dir,
  "/tmp.csv"), auto_write_over = FALSE,
  code_regex = "^([a-zA-Z_]+[0-9]*[a-zA-Z_]*[0-9]*)",
  code_type_regex = "([a-zA-Z]+)$",
  onset_offset_regex = "^([0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{3},[0-9]{2}:[0-9]{2}:[0-9]{2}:[0-9]{3})",
  code_values_regex = "\\\\(([a-zA-Z ?,.'/0-9;!|~`]+)\\\\)$",
  vb = FALSE)
}
\arguments{
\item{dv_dir}{Directory to extracted Datavyu file.}

\item{dv_fn}{Datavyu code file. Defaults to 'db'.}

\item{out_fn}{Output file name. Default is based on dv_dir.}

\item{auto_write_over}{A Boolean value. If TRUE, new output file overwrites old.}

\item{code_regex}{Regular expression to extract codes from Datavyu file.}

\item{code_type_regex}{Regular expression to extract doce types from Datavyu file.}

\item{onset_offset_regex}{Regular expression to extract onset/offset times.}

\item{code_values_regex}{Regular expression to extract code values from Datavyu file.}

\item{vb}{A boolean value. If TRUE, provides verbose output.}
}
\description{
Converts a Datavyu (.opf) file to CSV.
}
\examples{
dv_to_csv()
}
